basePath: /api/v1
definitions:
  domain.Post:
    properties:
      description:
        type: string
      id:
        type: integer
      image_url:
        type: string
      price:
        type: number
      title:
        type: string
      user_guid:
        type: string
    type: object
  server.adResponse:
    properties:
      author_login:
        type: string
      description:
        type: string
      image_url:
        type: string
      is_owner:
        type: boolean
      price:
        type: number
      title:
        type: string
    type: object
  server.createAdRequest:
    properties:
      description:
        type: string
      image_url:
        type: string
      price:
        type: number
      title:
        type: string
    type: object
  server.loginRequest:
    properties:
      login:
        type: string
      password:
        type: string
    type: object
  server.loginResponse:
    properties:
      token:
        type: string
    type: object
  server.registerRequest:
    properties:
      login:
        type: string
      password:
        type: string
    type: object
  server.registerResponse:
    properties:
      guid:
        type: string
      username:
        type: string
    type: object
host: localhost:3000
info:
  contact: {}
  description: REST API for marketplace service port 3000 is default in .env
  title: Marketplace API
  version: "1.0"
paths:
  /ads:
    get:
      consumes:
      - application/json
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      - description: per page
        in: query
        name: per_page
        type: integer
      - description: sort field
        enum:
        - price
        - created_at
        in: query
        name: sort_by
        type: string
      - description: order
        enum:
        - asc
        - desc
        in: query
        name: order
        type: string
      - description: min price
        in: query
        name: min_price
        type: number
      - description: max price
        in: query
        name: max_price
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/server.adResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
      summary: List ads
      tags:
      - ads
    post:
      consumes:
      - application/json
      parameters:
      - description: ad info
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/server.createAdRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Post'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      security:
      - XAuthToken: []
      summary: Create ad
      tags:
      - ads
  /login:
    post:
      consumes:
      - application/json
      parameters:
      - description: credentials
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/server.loginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/server.loginResponse'
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Login user
      tags:
      - auth
  /register:
    post:
      consumes:
      - application/json
      parameters:
      - description: credentials
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/server.registerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/server.registerResponse'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Register new user
      tags:
      - auth
securityDefinitions:
  XAuthToken:
    in: header
    name: X-Auth-Token
    type: apiKey
swagger: "2.0"
